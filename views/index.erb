
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html> 
<head> 
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
	<title>Dashboard</title> 


	<!-- 1. Add these JavaScript inclusions in the head of your page --> 
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script> 
	<script type="text/javascript" src="highcharts.js"></script>
	<script type="text/javascript" src="smoothmarquee.js"></script>
	<style type="text/css">
	body{
		background-color: black;
		color: white;
	}
	#graph{
		margin: 0 auto;
		width: 95%;
		height: 400px;
	}
	#projects {
		margin: 0 auto;
		width: 95%;
		font-size: 2em;
	}
	#projects td{
		text-align: center;
	}
	#list{
		margin: 0 auto;
		width: 100%;
		height: 200px;
		padding: .5em;
		
	}
	#trans {
		padding: .25em;
	}
	#bart {
		width: 400px;
		height: 300px;
		margin: 0 auto;
		font-size: 1.5em;
		background: URL('train_bg.png'), center, no-repeat;
		-moz-border-radius: .5em;
		-webkit-border-radius: .5em;
		border-radius: .5em;
	}
	#bart td{
		text-align: center;
	}
	/* The container for the module */
	#twitter {
	    background: #000;

	    width: 100%; /* Up to you but remember to change the div width below as well if you change it */
	    padding: .5em;
			font-size: 1.5em;
	    overflow: hidden; /* clearfix */

	    -moz-border-radius: 5px;
	    -webkit-border-radius: 5px;
	    -o-border-radius: 5px;
	    -ms-border-radius: 5px;
	    border-radius: 5px;
	}

	    #twitter h2 {
	        float: left; /* We'll make the heading sit on its own line next to the tweets */
	        width: 100px; /* Might wanna change this depending on the text in the heading */
	        margin: 0;
	        padding: 6px 0; /* I'll set the top and bottom padding here rather than in the container so as not to cut off any text */

	        font-size: 1em;
	        color: #fff;
	       /* line-height: 1; */
	    }

	    /* The marquee plug-in turns a marquee element into a div */
	    #twitter p, 
	    #twitter marquee, 
	    #twitter div {
	        float: left;
	        width: 95%; /* Container width - heading width - 10px (for some right padding) */
	        margin: 0;
	        padding: 6px 0; /* Again we set the padding in here so as not to cut text */
	        line-height: 1;
	    }

	        /* All the tweets will be links pointing to your page on twitter */
	        #twitter marquee a, 
	        #twitter div a {
	            margin: 0 10px 0 0;
	            color: #FFF;
	            text-decoration: none;
	        }

	            /* The i is used to display the date of the tweet */
	            #twitter marquee a i, 
	            #twitter div a i {
	                font-style: normal;
	                color: #999;
	            }
	
	</style>


	<!-- 2. Add the JavaScript to initialize the chart on document ready --> 
	<script type="text/javascript"> 
	var chart; // global

	/**
	* Request data from the server, add it to the graph and set a timeout to request again
	*/
	var colors = ['#FCBF17', '#47C816', '#FF3B15', '#7453BE', '#137AFA'];
	
	var call_count = 0;

	function requestData() {
		$.ajax({
			url: 'commit_data.json',
			dataType: 'json',
			//data: 'data',
			success: function(commits) {
				call_count++;
				console.log("Count: " + call_count);
				var data = [];
				var cat =[];
				var ct = 0;
				if (commits != null ) {
					$('#projects').html("");
					console.log("clear html");
				
					$.each(commits, function(key, value){
						console.log("Enter each");
						var obj = {name: key, color: colors[ct], y: value.count};
						//ct = ct == 4 ? 0 : ct+1;
						if (ct == 4) { ct = 0; } else{ ct = ct + 1;};

						console.log("Check counter for colors");
						cat.push(key);
						console.log("pushed key");
						data.push(obj);
						console.log("pushed data");
						$('#projects').append("<tr><td>" + key + "</td><td>" + value.message + "</td><td>" + value.last + "</td></tr>");
						console.log("Appended to projects");
					});
					var series = chart.series[0];

					// add the point
					chart.xAxis[0].setCategories(cat);
					console.log("Updated categories and drew chart");
					chart.series[0].setData(data);
					console.log("Updated data and drew chart");
				};
				// call it again after ten second
				setTimeout(requestData, 10000);	
			},
			cache: false
		});
	}
	
	function bartData(){
		$.ajax({
		        type: "GET",
			url: "http://api.bart.gov/api/etd.aspx?cmd=etd&orig=Mont&key=RHDD-EB5J-TJ2Q-YTGE",
			dataType: "xml",
			success: function(xml) {
				//console.log("Success");
				$('#bart').html("");
				//console.log("Clear the table");
				$(xml).find('etd').each(function(){
					//console.log("each etd in the xml");
					var name = $(this).find('abbreviation').text();
					//console.log("Grab Name");
					var estimates = [];
					$(this).find('estimate').each(function(){
						estimates.push($(this).find('minutes').text());
						//console.log("Each estimate");
					});
					$('#bart').append("<tr><td>" + name + "</td><td>" + estimates + "</td></tr>");
					//console.log("Appended");
					setTimeout(bartData, 60000);	
				});
			},
			cache: false
		});
	}

	$(document).ready(function() {
		bartData();
		chart = new Highcharts.Chart({
			chart: {
				renderTo: 'graph',
				defaultSeriesType: 'column',
				events: {
					load: requestData
				},
				backgroundColor: "#000",

			},
			legend: {
				enabled: false
			},
			credits:{
				enabled: false
			},
			title: {
				text: null,
				style: {
					color: '#FFF'
				}
			},
			xAxis: {
				labels:{
					enabled: true,
					style:{
						color: '#FFF'
					}
				},
				tickLength: 0,
				lineWidth: 0
			},
			yAxis: {
				title: {
					text: null
				},
				gridLineWidth: 0,
				labels:{
					enabled: false
				}
			},
			plotOptions: {
				series: {
					borderColor: '#000',
					dataLabels: {
						enabled: true,
						formatter: function() {
							return this.y;
						},
						color: "#FFF",
						style:{
							fontSize: '2em'
						}
					}
				}
			},
			series: [{
				name: 'Commits',
				type: 'column',
				data: [],

				}]
			});		
		});
		
		var Twitter = {
		    init: function () {
		        // Pass in the username you want to display feeds for
		        this.insertLatestTweets('codeforamerica');
		    }, 

		    // This replaces the <p>Loading...</p> with the tweets
		    insertLatestTweets: function (username) {
		        var limit    = 10;    // How many feeds do you want?
		        var url        = 'http://twitter.com/statuses/user_timeline.json?screen_name=' + username + '&count=' + limit + '&callback=?';

		        // Now ajax in the feeds from twitter.com
		        $.getJSON(url, function (data) {
		            // We'll start by creating a normal marquee-element for the tweets
		            var html = '<marquee behavior="scroll" scrollamount="1" direction="left">';

		            // Loop through all the tweets and create a link for each
		            for (var i in data) {
		                html += '<a href="http://twitter.com/' + username + '#status_' + data[i].id_str + '">' + data[i].text + ' <i>' + Twitter.daysAgo(data[i].created_at) + '</i></a>';
		            }

		            html += '</marquee>';

		            // Now replace the <p> with our <marquee>-element
		            $('#twitter p').replaceWith(html);

		            // The marquee element looks quite shite so we'll use Remy Sharp's plug-in to replace it with a smooth one
		            Twitter.fancyMarquee();
		        });
		    }, 

		    // Replaces the marquee-element with a fancy one
		    fancyMarquee: function () {
		        // Replace the marquee and do some fancy stuff (taken from remy sharp's website)
		        $('#twitter marquee').marquee('pointer')
		            .mouseover(function () {
		                $(this).trigger('stop');
		            })
		            .mouseout(function () {
		                $(this).trigger('start');
		            })
		            .mousemove(function (event) {
		                if ($(this).data('drag') == true) {
		                    this.scrollLeft = $(this).data('scrollX') + ($(this).data('x') - event.clientX);
		                }
		            })
		            .mousedown(function (event) {
		                $(this).data('drag', true).data('x', event.clientX).data('scrollX', this.scrollLeft);
		            })
		            .mouseup(function () {
		                $(this).data('drag', false);
		            });
		    }, 

		    // Takes a date and return the number of days it's been since said date
		    daysAgo: function (date) {
		        // TODO: Fix date for IE...

		        var d = new Date(date).getTime();
		        var n = new Date().getTime();

		        var numDays = Math.round(Math.abs(n - d) / (1000 * 60 * 60 * 24));
		        var daysAgo = numDays + ' days ago';

		        if (numDays == 0) {
		            daysAgo = 'today';
		        }
		        else if (numDays == 1) {
		            daysAgo = numDays + ' day ago';
		        }

		        return daysAgo;
		    }
		};

		Twitter.init();
		</script> 

	</head> 
	<body style="background-color: black"> 

		<!-- 3. Add the container --> 
		<div id="graph"></div> 

		<div id="list" >
			<table id="projects">
			</table>
		</div> 
		
		<div id="trans">
			<table id="bart">
			</table>
		</div>
		<div id="twitter">

		    <p>Loading...</p>

		    <noscript>This feature requires JavaScript</noscript>

		</div>

		</div> 
	</body> 
	</html>
